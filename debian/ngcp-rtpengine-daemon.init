#! /bin/sh
### BEGIN INIT INFO
# Provides:          ngcp-rtpengine-daemon
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Ngcp Mediaproxy-ng
# Description:       Proxy for RTP and other media streams
### END INIT INFO


PATH=/sbin:/bin:/usr/sbin:/usr/bin
NAME=ngcp-rtpengine-daemon
DESC="RTP/media proxy"
RUN_MEDIAPROXY=no
TABLE=0

case $(dirname $0) in
        /*) FULLPATH=$(dirname $0);;
        *)  FULLPATH=$(pwd)/$(dirname $0);;
esac

DAEMON=`which rtpengine`
DEFAULTS=/etc/default/${NAME}

test -f $DAEMON || exit 0

# Load startup options if available
if [ -f $DEFAULTS ]; then
   . $DEFAULTS || true
fi

if [ "$RUN_MEDIAPROXY" != "yes" ]; then
    echo "rtpengine not yet configured. Edit $DEFAULTS first."
    exit 0
fi
[ -z "$PIDFILE" ] && PIDFILE="/var/run/rtpengine.pid"

set -e

. /lib/lsb/init-functions

OPTIONS=""

[ -z "$ADDRESS" ] || OPTIONS="$OPTIONS --ip=$ADDRESS"
[ -z "$LISTEN_TCP" ] || OPTIONS="$OPTIONS --listen-tcp=$LISTEN_TCP"
[ -z "$LISTEN_UDP" ] || OPTIONS="$OPTIONS --listen-udp=$LISTEN_UDP"
[ -z "$LISTEN_NG" ] || OPTIONS="$OPTIONS --listen-ng=$LISTEN_NG"
[ -z "$TIMEOUT" ] || OPTIONS="$OPTIONS --timeout=$TIMEOUT"
[ -z "$SILENT_TIMEOUT" ] || OPTIONS="$OPTIONS --silent-timeout=$SILENT_TIMEOUT"
[ -z "$PIDFILE" ] || OPTIONS="$OPTIONS --pidfile=$PIDFILE"
[ -z "$TOS" ] || OPTIONS="$OPTIONS --tos=$TOS"
[ -z "$PORT_MIN" ] || OPTIONS="$OPTIONS --port-min=$PORT_MIN"
[ -z "$PORT_MAX" ] || OPTIONS="$OPTIONS --port-max=$PORT_MAX"
[ -z "$ADV_ADDRESS" ] || OPTIONS="$OPTIONS --advertised-ip=$ADV_ADDRESS"
[ -z "$ADDRESS_IPV6" ] || OPTIONS="$OPTIONS --ip6=$ADDRESS_IPV6"
[ -z "$ADV_ADDRESS_IPV6" ] || OPTIONS="$OPTIONS --advertised-ip6=$ADV_ADDRESS_IPV6"
[ -z "$REDIS" ] || OPTIONS="$OPTIONS --redis=$REDIS"
[ -z "$REDIS_DB" ] || OPTIONS="$OPTIONS --redis-db=$REDIS_DB"
[ -z "$B2B_URL" ] || OPTIONS="$OPTIONS --b2b-url=$B2B_URL"
[ -z "$NO_FALLBACK" -o \( "$NO_FALLBACK" != "1" -a "$NO_FALLBACK" != "yes" \) ] || OPTIONS="$OPTIONS --no-fallback"
OPTIONS="$OPTIONS --table=$TABLE"
[ -z "$LOG_LEVEL" ] || OPTIONS="$OPTIONS --log-level=$LOG_LEVEL"
if test "$FORK" = "no" ; then
	OPTIONS="$OPTIONS --foreground"    
fi

case "$1" in
  start)

	echo -n "Starting $DESC: $NAME"
        if [ $TABLE -ge 0 ]; then \
                set +e
        	modprobe xt_MEDIAPROXY
        	echo "del $TABLE" > /proc/mediaproxy/control 2>/dev/null
        	iptables -N mediaproxy 2> /dev/null
        	iptables -D INPUT -j mediaproxy 2> /dev/null
        	iptables -I INPUT -j mediaproxy
        	iptables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	iptables -I mediaproxy -p udp -j MEDIAPROXY --id $TABLE
        	ip6tables -N mediaproxy 2> /dev/null
        	ip6tables -D INPUT -j mediaproxy 2> /dev/null
        	ip6tables -I INPUT -j mediaproxy
        	ip6tables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	ip6tables -I mediaproxy -p udp -j MEDIAPROXY --id $TABLE
        	set -e
        fi
	start-stop-daemon --start --quiet --pidfile $PIDFILE \
		--exec $DAEMON -- $OPTIONS || echo -n " already running"
	log_end_msg $?
	;;
  stop)
	echo -n "Stopping $DESC: $NAME"
	start-stop-daemon --oknodo --stop --quiet --pidfile $PIDFILE \
		--exec $DAEMON
	if [ "$?" -ne 0 ]; then
		return $?
	fi
        if [ $TABLE -ge 0 ]; then \
        	set +e
        	echo "del $TABLE" > /proc/mediaproxy/control 2>/dev/null
        	iptables -D INPUT -j mediaproxy 2> /dev/null
        	iptables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	ip6tables -D INPUT -j mediaproxy 2> /dev/null
        	ip6tables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	rmmod ipt_MEDIAPROXY 2>/dev/null
        	rmmod xt_MEDIAPROXY 2>/dev/null
        	set -e
        fi
	rm -f $PIDFILE
	log_end_msg $?
	;;
  restart|force-reload)

	echo -n "Restarting $DESC: $NAME"
	start-stop-daemon --oknodo --stop --quiet --pidfile \
		$PIDFILE --exec $DAEMON
	if [ "$?" -ne 0 ]; then
		return $?
	fi
	rm -f $PIDFILE
        if [ $TABLE -ge 0 ]; then \
        	sleep 1
        	set +e
        	if [ -e /proc/mediaproxy/control ]; then
        		echo "del $TABLE" > /proc/mediaproxy/control 2>/dev/null
        	fi
        	iptables -D INPUT -j mediaproxy 2> /dev/null
        	iptables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	ip6tables -D INPUT -j mediaproxy 2> /dev/null
        	ip6tables -D mediaproxy -p udp -j MEDIAPROXY --id $TABLE 2>/dev/null
        	rmmod ipt_MEDIAPROXY 2>/dev/null
        	rmmod xt_MEDIAPROXY 2>/dev/null
        	modprobe xt_MEDIAPROXY
        	iptables -N mediaproxy 2> /dev/null
        	iptables -I INPUT -j mediaproxy
        	iptables -I mediaproxy -p udp -j MEDIAPROXY --id $TABLE
        	ip6tables -N mediaproxy 2> /dev/null
        	ip6tables -I INPUT -j mediaproxy
        	ip6tables -I mediaproxy -p udp -j MEDIAPROXY --id $TABLE
        	set -e
        fi
	start-stop-daemon --start --quiet --pidfile \
		$PIDFILE --exec $DAEMON  -- $OPTIONS
	log_end_msg $?
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  *)
	echo "Usage: $0 {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
